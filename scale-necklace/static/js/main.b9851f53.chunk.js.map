{"version":3,"sources":["notes.ts","util.tsx","scales.ts","components.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["notes","sharp","flat","NUM_NOTES","length","highlightColor","foregroundColor","playingColor","staticTextClassName","randomNumber","n","Math","floor","random","randomChoice","array","rotate","start","modStart","mod","slice","concat","a","b","sum","ns","reduce","cumSum","soFar","randomSteps","patterns","aug2ndProb","doubleHalfStepsProb","patternSubset","aug2ndPatterns","filter","hasAug2nd","noAug2ndPatterns","s","alert","doubleHalfStepPatterns","hasDoubleHalfSteps","noDoubleHalfStepPatterns","prob","predicate","useNearestModulo","pp","m","q","React","useRef","current","qq","round","AScales","len","flatten","BScales","map","head","tail","tag","scale","CScales","c","getStepsA","getStepsB","getStepsC","zip","some","arrayEqual","every","isAdjacentHelper","check1","check2","rotated1","rotated2","h1","t1","h2","t2","assert","isAdjacent","r11","r12","r1","r21","r22","r2","scale1","scale2","p","_","i","isValidA","head1","head2","undefined","isValidB","isValid","steps","Slider","value","setValue","className","type","min","max","step","onChange","target","Switch","checked","Form","onSubmit","useState","input","setInput","validNoteNames","flatMap","validNoteNamesSet","Set","errorMsg","noteNames","split","name","has","indices","indexOf","index","cumulative","getSteps","root","rootStep","e","preventDefault","disabled","App","scaleHistory","setScaleHistory","scaleChoice","setScaleChoice","setScale","moveRoot","setMoveRoot","setDoubleHalfStepsProb","setAug2ndProb","synth","useMemo","Synth","useReducer","state","action","loaded","notesToPlay","Error","dispatch","playing","useEffect","interval","note","triggerAttack","octave","setInterval","triggerRelease","clearInterval","toDestination","keyDownListener","key","keyUpListener","window","addEventListener","removeEventListener","setNotesToPlay","then","getName","sharpName","replace","flatName","centerButtonClassName","modNotes","notesIndices","stepsIndices","stepsOffset","getColor","includes","turnSteps","turnNotes","style","id","role","href","title","rel","aria-live","tabIndex","join","onClick","adjacent","adjacentTo","aria-pressed","classNames","turn","aria-controls","aria-label","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9851f53.chunk.js","sourcesContent":["export type Note = { sharp: string; flat: string };\nexport const notes: Note[] = [\n  { sharp: \"c\", flat: \"c\" },\n  { sharp: \"c#\", flat: \"db\" },\n  { sharp: \"d\", flat: \"d\" },\n  { sharp: \"d#\", flat: \"eb\" },\n  { sharp: \"e\", flat: \"e\" },\n  { sharp: \"f\", flat: \"f\" },\n  { sharp: \"f#\", flat: \"gb\" },\n  { sharp: \"g\", flat: \"g\" },\n  { sharp: \"g#\", flat: \"ab\" },\n  { sharp: \"a\", flat: \"a\" },\n  { sharp: \"a#\", flat: \"bb\" },\n  { sharp: \"b\", flat: \"b\" },\n];\nexport const NUM_NOTES = notes.length;\n","import { notes } from \"./notes\";\nimport { hasAug2nd, hasDoubleHalfSteps, patterns } from \"./scales\";\nimport React from \"react\";\n\nexport const highlightColor = \"#fca311\";\nexport const foregroundColor = \"#e5e5e5\";\nexport const lowlightColor = \"#999999\";\nexport const playingColor = \"#ff4136\";\nexport type Steps = number[];\nexport type Indices = number[];\nexport type State = { loaded: false } | { loaded: true; notesToPlay: Steps };\nexport type Action =\n  | { type: \"reset\" }\n  | { type: \"nextNote\" }\n  | { type: \"play\"; notes: Indices };\n\nexport const staticTextClassName = \"low-light-color medium-font auto-margin\";\nexport function randomNumber(n: number): number {\n  return Math.floor(Math.random() * n);\n}\n\nexport function randomChoice<X>(array: X[]): X {\n  return array[randomNumber(array.length)];\n}\n\nexport function rotate<X>(array: X[], start: number) {\n  let modStart = mod(start, array.length);\n  return array.slice(modStart).concat(array.slice(0, modStart));\n}\n\nexport function mod(a: number, b: number) {\n  return ((a % b) + b) % b;\n}\n\nexport function sum(ns: number[]): number {\n  return ns.reduce((sum, n) => n + sum, 0);\n}\n\nexport function modNotes(a: number) {\n  return mod(a, notes.length);\n}\n\nexport function cumSum(array: number[], start = 0) {\n  return array.reduce(\n    (soFar: Indices, n: number) => soFar.concat(soFar[soFar.length - 1] + n),\n    [start]\n  );\n}\n\nexport const randomSteps = (\n  patterns: Steps[],\n  aug2ndProb: number,\n  doubleHalfStepsProb: number\n): Steps | null => {\n  const aug2ndPatterns = patterns.filter(hasAug2nd);\n  const noAug2ndPatterns = patterns.filter((s) => !hasAug2nd(s));\n  let patternSubset: Steps[];\n  const useAug2nd =\n    (100 * Math.random() < aug2ndProb || noAug2ndPatterns.length === 0) &&\n    aug2ndPatterns.length > 0;\n  if (useAug2nd) {\n    if (aug2ndProb === 0) {\n      alert(\"No adjacent scale without augmented seconds.\");\n    }\n    patternSubset = aug2ndPatterns;\n  } else if (noAug2ndPatterns.length > 0) {\n    patternSubset = noAug2ndPatterns;\n  } else {\n    return null;\n  }\n  const doubleHalfStepPatterns = patternSubset.filter(hasDoubleHalfSteps);\n  const noDoubleHalfStepPatterns = patternSubset.filter(\n    (s) => !hasDoubleHalfSteps(s)\n  );\n  if (\n    (100 * Math.random() < doubleHalfStepsProb ||\n      noDoubleHalfStepPatterns.length === 0) &&\n    doubleHalfStepPatterns.length > 0\n  ) {\n    if (doubleHalfStepsProb === 0) {\n      alert(\"No adjacent scale without double half steps.\");\n    }\n    return randomChoice(doubleHalfStepPatterns);\n  } else if (noDoubleHalfStepPatterns.length > 0) {\n    return randomChoice(noDoubleHalfStepPatterns);\n  } else {\n    return null;\n  }\n};\n\nexport function prob(predicate: (scale: Steps) => boolean) {\n  return (100 * patterns.filter(predicate).length) / patterns.length;\n}\n\n// useNearestModulo returns a value minimizing the distance traveled around a\n// circle. It always satisfies useNearestModulo(P, M) % M = P.\n//\n// useNearestModulo(P', M) = Q' such that Q' % M = P' but minimizing |Q' - Q|,\n// where Q is the return value from the previous call. The returned value Q' is\n// then used as the Q for the next call, and so forth.\n//\n// In the code below, P' is pp and Q' is qq.\n//\n// Example (sequence of calls):\n//   useNearestModulo( 0, 12) =  0\n//   useNearestModulo(10, 12) = -2\n//   useNearestModulo( 3, 12) =  3\n//   useNearestModulo( 7, 12) =  7\n//   useNearestModulo(10, 12) = 10\nexport function useNearestModulo(pp: number, m: number): number {\n  const q = React.useRef<number | null>(null);\n\n  // If the function hasn't been called yet, just return P' which satisfies\n  // P' % M = P', but record it as Q for the next call.\n  if (q.current == null) {\n    q.current = pp;\n    return pp;\n  }\n\n  // Calculate Q' that gets as close to Q as possible while satisfying\n  // Q' % M = P'.\n  const qq = Math.round((q.current - pp) / m) * m + pp;\n  q.current = qq;\n  return qq;\n}\n","import { flatten, zip } from \"fp-ts/lib/Array\";\nimport { NUM_NOTES } from \"./notes\";\nimport { rotate, Steps } from \"./util\";\nimport assert from \"assert\";\n\ntype AScale = { head: [1]; tail: B } | { head: [1, 1]; tail: B };\ntype BScale =\n  | { head: [2]; tail: C }\n  | { head: [2, 3]; tail: C }\n  | { head: [3]; tail: A };\ntype CScale = A | B | null;\n\ntype A = { tag: \"A\"; scale: AScale };\ntype B = { tag: \"B\"; scale: BScale };\ntype C = { tag: \"C\"; scale: CScale };\n\nfunction AScales(len: number): A[] {\n  if (len <= 1) {\n    return [];\n  }\n  return flatten<AScale>([\n    BScales(len - 1).map((b: B) => ({ head: [1], tail: b })),\n    BScales(len - 2).map((b: B) => ({ head: [1, 1], tail: b })),\n  ]).map((a: AScale) => ({ tag: \"A\", scale: a }));\n}\n\nfunction BScales(len: number): B[] {\n  if (len <= 0) {\n    return [];\n  }\n  return flatten<BScale>([\n    AScales(len - 3).map((a: A): BScale => ({ head: [3], tail: a })),\n    CScales(len - 2).map((c: C) => ({ head: [2], tail: c })),\n    CScales(len - 5).map((c: C) => ({ head: [2, 3], tail: c })),\n  ]).map((b: BScale) => ({ tag: \"B\", scale: b }));\n}\n\nfunction CScales(len: number): C[] {\n  if (len < 0) {\n    return [];\n  } else if (len === 0) {\n    return [{ tag: \"C\", scale: null }];\n  } else {\n    return flatten<A | B>([AScales(len), BScales(len)]).map((c: CScale) => ({\n      tag: \"C\",\n      scale: c,\n    }));\n  }\n}\n\nfunction getStepsA(a: A): Steps {\n  const head: Steps = a.scale.head;\n  if (a.scale.tail === null) {\n    return head;\n  }\n  return head.concat(getStepsB(a.scale.tail));\n}\n\nfunction getStepsB(b: B): Steps {\n  const head: Steps = b.scale.head;\n  switch (b.scale.tail.tag) {\n    case \"A\":\n      return head.concat(getStepsA(b.scale.tail));\n    case \"C\":\n      return head.concat(getStepsC(b.scale.tail));\n  }\n}\n\nfunction getStepsC(c: C): Steps {\n  if (c.scale === null) {\n    return [];\n  }\n  switch (c.scale.tag) {\n    case \"A\":\n      return getStepsA(c.scale);\n    case \"B\":\n      return getStepsB(c.scale);\n  }\n}\n\nexport function hasDoubleHalfSteps(scale: Steps): boolean {\n  return zip(scale, rotate(scale, 1)).some(([a, b]) => a === 1 && b === 1);\n}\n\nexport function hasAug2nd(scale: Steps): boolean {\n  return scale.some((s) => s === 3);\n}\n\nfunction arrayEqual<X>(a: X[], b: X[]): boolean {\n  return zip(a, b).every(([a, b]) => a === b);\n}\n\nfunction isAdjacentHelper(\n  check1: Steps,\n  check2: Steps,\n  rotated1: Steps,\n  rotated2: Steps\n): boolean {\n  if (check1.length === 0 || check2.length === 0) return false; // no steps in common\n  const [h1, ...t1] = check1;\n  const [h2, ...t2] = check2;\n  assert(h1 === rotated1[rotated1.length - 1]);\n  assert(h2 === rotated2[rotated2.length - 1]);\n  if (h1 === h2) {\n    const [r11, r12, ...r1] = rotated1;\n    const [r21, r22, ...r2] = rotated2;\n    let isAdjacent;\n\n    if (r11 !== r12 && r11 + r12 === r21 + r22) isAdjacent = arrayEqual(r1, r2); // sharpened/flattened\n    if (r11 + r12 === r21) {\n      isAdjacent = arrayEqual(r1, [r22].concat(r2));\n    } // split\n    if (r21 + r22 === r11) isAdjacent = arrayEqual(r2, [r12].concat(r1)); // merge\n    if (isAdjacent) return true;\n  }\n  return isAdjacentHelper(t1, t2, rotate(rotated1, 1), rotate(rotated2, 1));\n}\n\nfunction isAdjacent(scale1: Steps, scale2: Steps) {\n  return isAdjacentHelper(scale1, scale2, rotate(scale1, 1), rotate(scale2, 1));\n}\n\nexport const patterns: Steps[] = flatten(\n  CScales(NUM_NOTES)\n    .map(getStepsC)\n    .map((p) => p.map((_, i) => rotate(p, i)))\n);\n\nexport function adjacentTo(scale: Steps): Steps[] {\n  return patterns.filter((scale2) => isAdjacent(scale, scale2));\n}\n\nexport function isValidA(scale: Steps): boolean {\n  const [head1, head2, ...tail] = scale;\n  if (head1 === undefined) {\n    return false;\n  } else {\n    if (head1 === 1 && head2 === 1) {\n      return isValidB(tail);\n    } else if (head1 === 1) {\n      return isValidB([head2, ...tail]);\n    } else {\n      return false;\n    }\n  }\n}\n\nexport function isValidB(scale: Steps): boolean {\n  const [head1, head2, ...tail] = scale;\n  if (head1 === 2 && head2 === 3) {\n    return isValid(tail);\n  } else if (head1 === 2) {\n    return isValid([head2, ...tail]);\n  } else if (head1 === 3) {\n    return isValidA([head2, ...tail]);\n  } else {\n    return false;\n  }\n}\n\nexport function isValid(steps: Steps): boolean {\n  const [head] = steps;\n  if (head === undefined) {\n    return true;\n  } else {\n    return isValidA(steps) || isValidB(steps);\n  }\n}\n\n// function dbg(scale1: Steps, scale2: Steps) {\n//   const rotated1 = rotate(scale1, 1);\n//   const rotated2 = rotate(scale2, 1);\n//   console.log(\n//     scale1,\n//     scale2,\n//     rotated1,\n//     rotated2,\n//     isAdjacentHelper(scale1, scale2, rotated1, rotated2)\n//   );\n//   // console.log(\n//   //   scale2,\n//   //   scale1,\n//   //   rotated2,\n//   //   rotated1,\n//   //   isAdjacentHelper(scale2, scale1, rotated2, rotated1)\n//   // );\n// }\n\n// dbg([1, 3, 1, 1, 2, 3, 1], [1, 3, 1, 1, 2, 2, 2]);\nexport type Scale = { root: number; steps: Steps; rootStep: number };\n","import React, { Dispatch, SetStateAction } from \"react\";\nimport { notes } from \"./notes\";\nimport { staticTextClassName, Steps, sum } from \"./util\";\nimport { isValid, Scale } from \"./scales\";\n\nexport const Slider: React.FC<{\n  value: number;\n  setValue: Dispatch<SetStateAction<number>>;\n}> = ({ value, setValue }) => (\n  <label className=\"relative\">\n    <input\n      type=\"range\"\n      className={\"width-100 translate-minus-50 slide absolute\"}\n      min={0}\n      max={100}\n      step={10}\n      value={value}\n      onChange={({ target }) => {\n        setValue(+target.value);\n      }}\n    />\n  </label>\n);\nexport const Switch: React.FC<{\n  value: boolean;\n  setValue: Dispatch<SetStateAction<boolean>>;\n}> = ({ value, setValue }) => (\n  <label className=\"relative\">\n    <input\n      className={\"invisible\"}\n      type=\"checkbox\"\n      onChange={() => setValue(!value)}\n      checked={!value}\n    />\n    <span className=\"slide switch absolute center\" />\n  </label>\n);\n\nexport const Form: React.FC<{ onSubmit: (scale: Scale) => void }> = ({\n  onSubmit,\n}) => {\n  const [input, setInput] = React.useState<string | null>(null);\n  const validNoteNames = notes.flatMap(({ sharp, flat }) => [sharp, flat]);\n  const validNoteNamesSet = new Set(validNoteNames);\n\n  const getSteps = (input: string): null | Steps => {\n    const noteNames = input.split(\" \");\n    for (const name of noteNames) {\n      if (!validNoteNamesSet.has(name)) {\n        return null;\n      }\n    }\n    const indices = noteNames.map((name) =>\n      Math.floor(validNoteNames.indexOf(name) / 2)\n    );\n    let [head, ...tail] = indices;\n    tail = tail.concat([head + notes.length]);\n    return tail.reduce((soFar: Steps, index: number) => {\n      const cumulative = head + sum(soFar);\n      return soFar.concat([index - cumulative]);\n    }, []);\n  };\n\n  let errorMsg = null;\n  let steps = null;\n  let scale: null | Scale = null;\n  if (input !== null) {\n    steps = getSteps(input);\n    const noteNames = input.split(\" \").filter((s) => s !== \"\");\n    for (const name of noteNames) {\n      if (!validNoteNamesSet.has(name)) {\n        errorMsg = `${name} is not a valid note name.`;\n      }\n    }\n    if (errorMsg === null) {\n      const indices = noteNames.map((name) =>\n        Math.floor(validNoteNames.indexOf(name) / 2)\n      );\n      let [root, ...tail] = indices;\n      tail = tail.concat([root + notes.length]);\n      steps = tail.reduce((soFar: Steps, index: number) => {\n        const cumulative = root + sum(soFar);\n        return soFar.concat([index - cumulative]);\n      }, []);\n      scale = { steps, root, rootStep: 0 };\n    }\n  }\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (scale !== null) {\n          if (!isValid(scale.steps)) {\n            const steps = scale.steps.slice(0, scale.steps.length - 1);\n            alert(`${steps} is not a valid sequence of steps.`);\n          }\n          onSubmit(scale);\n        }\n      }}\n      className={`auto-margin flex-row width-400`}\n    >\n      <label className={`${staticTextClassName} flex-row width-300`}>\n        {errorMsg === null ? \"Input scale\" : errorMsg}\n        <input\n          className={\"margin-left-20 no-outline\"}\n          type=\"text\"\n          value={input === null ? \"\" : input}\n          onChange={(e) => setInput(e.target.value)}\n        />\n      </label>\n      <input\n        className={\"button no-border curved-radius medium-text\"}\n        type=\"submit\"\n        value=\"Submit\"\n        disabled={input === null || errorMsg !== null}\n      />\n    </form>\n  );\n};\n","import React from \"react\";\nimport \"./scales\";\nimport {\n  adjacentTo,\n  hasAug2nd,\n  hasDoubleHalfSteps,\n  patterns,\n  Scale,\n} from \"./scales\";\nimport { Note, notes } from \"./notes\";\nimport { start, Synth } from \"tone\";\nimport \"./styles.scss\";\nimport {\n  Action,\n  cumSum,\n  foregroundColor,\n  highlightColor,\n  Indices,\n  lowlightColor,\n  mod,\n  playingColor,\n  prob,\n  randomNumber,\n  randomSteps,\n  rotate,\n  State,\n  staticTextClassName,\n  useNearestModulo,\n} from \"./util\";\nimport { Form, Slider, Switch } from \"./components\";\n\nexport default function App(): JSX.Element {\n  const [scaleHistory, setScaleHistory] = React.useState<Scale[]>([\n    {\n      root: 0,\n      rootStep: 0,\n      steps: patterns[0],\n    },\n  ]);\n  const [scaleChoice, setScaleChoice] = React.useState<number>(0);\n  const scale = scaleHistory[scaleChoice];\n  const root = scale.root;\n  function setScale(scale: Scale) {\n    setScaleChoice(scaleHistory.length);\n    setScaleHistory(scaleHistory.concat(scale));\n  }\n  const [moveRoot, setMoveRoot] = React.useState<boolean>(true);\n  const [doubleHalfStepsProb, setDoubleHalfStepsProb] = React.useState<number>(\n    prob(hasDoubleHalfSteps)\n  );\n  const [aug2ndProb, setAug2ndProb] = React.useState<number>(prob(hasAug2nd));\n  const synth = React.useMemo(() => new Synth(), []);\n\n  const [state, dispatch] = React.useReducer(\n    (state: State, action: Action): State => {\n      if (state.loaded) {\n        if (action.type === \"play\") {\n          return { ...state, notesToPlay: action.notes };\n        } else if (action.type === \"nextNote\") {\n          const [, ...notesToPlay] = state.notesToPlay;\n          return { ...state, notesToPlay };\n        } else if (action.type === \"reset\") {\n          return { ...state, notesToPlay: [] };\n        } else {\n          throw new Error(\"Invalid action.type\");\n        }\n      }\n      return { loaded: true, notesToPlay: [] };\n    },\n    {\n      loaded: false,\n    }\n  );\n\n  const playing: boolean = state.loaded && state.notesToPlay.length > 0;\n  const octave: number = 3;\n\n  React.useEffect(() => {\n    if (state.loaded) {\n      if (playing) {\n        const [head]: Indices = state.notesToPlay;\n        let interval: number | null = null;\n        const note = notes[head % notes.length];\n        synth.triggerAttack(\n          `${note.sharp}${head < notes.length ? octave : octave + 1}`\n        );\n        // @ts-ignore\n        interval = setInterval(() => {\n          dispatch({ type: \"nextNote\" });\n        }, 500);\n        return () => {\n          synth.triggerRelease();\n          if (interval) clearInterval(interval);\n        };\n      }\n    } else {\n      synth.toDestination();\n      dispatch({ type: \"reset\" });\n    }\n  }, [state, synth, playing]);\n\n  React.useEffect(() => {\n    const keyDownListener = ({ key }: { key: string }) => {\n      if (key === \"Shift\") setMoveRoot(false);\n      if (key === \"m\") {\n        setMoveRoot((m) => !m);\n      }\n    };\n    const keyUpListener = ({ key }: { key: string }) => {\n      if (key === \"Shift\") setMoveRoot(true);\n    };\n    window.addEventListener(\"keydown\", keyDownListener);\n    window.addEventListener(\"keyup\", keyUpListener);\n    return () => {\n      window.removeEventListener(\"keydown\", keyDownListener);\n      window.removeEventListener(\"keyup\", keyUpListener);\n    };\n  }, [setMoveRoot]);\n\n  const setRandomRoot = () => {\n    const root = randomNumber(notes.length);\n    setScale({ ...scale, root });\n    setNotesToPlay([]);\n  };\n  const setNotesToPlay = (notes: Indices) => {\n    if (state.loaded) {\n      if (playing) {\n        dispatch({ type: \"reset\" });\n      } else {\n        start().then(() => dispatch({ type: \"play\", notes }));\n      }\n    }\n  };\n\n  const setRandomScale = () => {\n    const steps = randomSteps(patterns, aug2ndProb, doubleHalfStepsProb);\n    if (steps === null) {\n      alert(\"No valid scale.\");\n    } else {\n      setScale({ ...scale, rootStep: 0, steps });\n    }\n  };\n\n  const getName = ({ sharp, flat }: Note) => {\n    const sharpName = sharp.replace(/(\\w)#/, \"$1♯\");\n    const flatName = flat.replace(/(\\w)b/, \"$1♭\");\n    return sharpName === flatName ? sharpName : `${sharpName} / ${flatName}`;\n  };\n  const noteNames = notes.map(getName);\n\n  const setRandomAdjacentScale = () => {\n    const adjacent = adjacentTo(scale.steps);\n    const steps = randomSteps(adjacent, aug2ndProb, doubleHalfStepsProb);\n    if (steps === null) {\n      alert(\"No adjacent scale possible.\");\n    } else {\n      setScale({ ...scale, steps });\n    }\n  };\n  const centerButtonClassName =\n    \"button large-font no-border curved-radius auto-margin\";\n\n  const modNotes = (scale: number[]) => scale.map((i) => mod(i, notes.length));\n  const steps = rotate(scale.steps, scale.rootStep);\n  const indices = cumSum(steps, scale.root);\n  const notesIndices = modNotes(indices);\n  const stepsIndices = modNotes(cumSum(scale.steps));\n  const stepsOffset =\n    scale.rootStep === 0\n      ? 0\n      : scale.steps.slice(0, scale.rootStep).reduce((sum, n) => sum + n);\n\n  const getColor = (i: number, indices: number[]) => {\n    if (\n      state.loaded &&\n      state.notesToPlay.length > 0 &&\n      mod(state.notesToPlay[0], notes.length) === i\n    )\n      return playingColor;\n    if (indices.includes(i)) return highlightColor;\n    return foregroundColor;\n  };\n\n  const turnSteps = useNearestModulo(-stepsOffset / notes.length, 1);\n  const turnNotes = useNearestModulo(-root / notes.length, 1);\n\n  return (\n    <div\n      className={\"flex-column full-height\"}\n      style={\n        {\n          \"--m\": notes.length,\n          \"--fg\": foregroundColor,\n          \"--hl\": highlightColor,\n          \"--ll\": lowlightColor,\n          \"--pl\": playingColor,\n        } as any\n      }\n    >\n      <header id=\"masthead\" className=\"site-header\" role=\"banner\">\n        <hgroup>\n          <h1 className=\"site-title\">\n            <a\n              href=\"/\"\n              title=\"Violin Lessons Lancaster PA   .  Decades of Teaching Experience\"\n              rel=\"home\"\n            >\n              Violin Lessons Lancaster PA . Decades of Teaching Experience\n            </a>\n          </h1>\n          <h2 className=\"site-description\">\n            Christopher Brooks, 717.291.9123, kenorjazz@gmail.com\n          </h2>\n        </hgroup>\n      </header>\n      <div\n        id=\"noteSequence\"\n        aria-live={\"assertive\"}\n        className={\"absolute z-1000 invisible\"}\n        tabIndex={0}\n      >\n        {notesIndices.map((i) => noteNames[i]).join(\",\")}\n      </div>\n      <div className={\"absolute\"}>\n        <button\n          className={centerButtonClassName}\n          onClick={() => setScaleChoice(scaleChoice - 1)}\n          disabled={scaleChoice === 0}\n        >\n          ⇦\n        </button>\n        <button\n          className={centerButtonClassName}\n          onClick={() => setScaleChoice(scaleChoice + 1)}\n          disabled={scaleChoice === scaleHistory.length - 1}\n        >\n          ⇨\n        </button>\n      </div>\n\n      <div\n        className={\n          \"relative width-100-percent flex-column justify-content-center full-height\"\n        }\n      >\n        <div\n          className={\n            \"inside-necklace-height flex-column space-evenly center-text\"\n          }\n        >\n          <button className={centerButtonClassName} onClick={setRandomRoot}>\n            Randomize Root\n          </button>\n          <button className={centerButtonClassName} onClick={setRandomScale}>\n            Randomize Scale\n          </button>\n          <button\n            className={centerButtonClassName}\n            onClick={setRandomAdjacentScale}\n          >\n            Random Adjacent Scale\n          </button>\n          <button\n            className={centerButtonClassName}\n            onClick={() => setNotesToPlay(indices)}\n            aria-pressed={playing}\n          >\n            {playing ? \"Pause\" : \"Play\"}\n          </button>\n          <Form onSubmit={setScale} />\n          <Switch value={moveRoot} setValue={setMoveRoot} />\n          <span className={staticTextClassName}>\n            Probability of consecutive half-steps\n          </span>\n          <Slider\n            value={doubleHalfStepsProb}\n            setValue={setDoubleHalfStepsProb}\n          />\n          <span className={staticTextClassName}>\n            Probability of augmented 2nd\n          </span>\n          <Slider value={aug2ndProb} setValue={setAug2ndProb} />\n        </div>\n        {notes.map((_, i: number) => {\n          let classNames = [\n            \"droplet\",\n            \"center\",\n            \"offset-angle\",\n            \"button\",\n            \"border-color\",\n          ];\n          if (moveRoot) {\n            classNames = classNames.concat(classNames, [\"no-pointer-events\"]);\n          }\n\n          const turn = turnSteps + i / notes.length;\n          return (\n            <button\n              aria-controls=\"noteSequence\"\n              className={classNames.join(\" \")}\n              aria-label={rotate(noteNames, stepsOffset)[i]}\n              key={i}\n              style={\n                {\n                  \"--color\": getColor(i, stepsIndices),\n                  \"--turn\": turn,\n                } as any\n              }\n              onClick={() => {\n                if (!moveRoot && stepsIndices.includes(i)) {\n                  setScale({\n                    ...scale,\n                    rootStep: stepsIndices.indexOf(i),\n                  });\n                }\n              }}\n            />\n          );\n        })}\n        {notes.map((note: Note, i: number) => {\n          let classNames = [\n            \"droplet\",\n            \"offset-angle\",\n            \"color\",\n            \"medium-font\",\n            \"center\",\n            \"invert-on-hover\",\n          ];\n          if (!moveRoot) {\n            classNames = classNames.concat(classNames, [\"no-pointer-events\"]);\n          }\n          let turn = turnNotes + i / notes.length;\n          return (\n            <div\n              className={classNames.join(\" \")}\n              style={\n                { \"--turn\": turn, \"--color\": getColor(i, notesIndices) } as any\n              }\n              id={`note${i}`}\n              key={i}\n              onClick={() => setScale({ ...scale, root: i })}\n            >\n              <div\n                style={{ \"--turn\": turn } as any}\n                className={\"reverse-rotate\"}\n              >\n                {getName(note)}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}